/**
 * file colorize.js
 *
 * contains the functions that allow for the interactive colorization of the home page image on paulmartinus.com
 *
 * @author     - Niklas Sletteland
 * @author URI - http://niklassletteland.com/
 *
 * copyright paulmartinus.com 2013
 *
 * description of global vars:
 * -----------------------------
 * current_mask_color - defaults to white - the color under the user's mouse on the shadow canvas, used in a hash-table
 *                      lookup do determine which image zone(s) to colorize
 *
 * active_hotspots - keeps track of the zones that are actively colorized - used to reference them so they can be removed
 *
 * active_stars -  an array that keeps track of actively colorized stars, so they can be removed as they fade in and out
 *
 * colorize_stars - a boolean variable used to keep track of whether the stars should currently be being animated. is set to false
 *                  when a user moves the mouse over a color that does not represent a star, so that the star twinkling animation will
 *                  stop.
 *
 * counter - an increasing counter used to give each new canvas a unique identifying id
 *
 * star_conter - same as counter but for the stars that are fading in and out
 *
 * timeouts - keeps track of the timeouts that are running. necessary to prevent an amiation that takes a few seconds to complete from 
 *            continuing to run after the user has moved the mouse away from that zone
 *
 * color_img - the background image that the temp canvases use - this is the color version of the home page image, so the color will show
 *             through in the region that is being colorized
 *
 */
 


/**
 * hot-spot definitions
 * includes paths and mask colors
 * will be extracted and dynamically applied to <canvas> paths
 */
hotspots = new Array();



// sphere bg
sphere_bg = {
	coords : [ "650,243|636,244|594,243|578,243|468,244|440,244|387,244|337,243|275,246|260,243|242,252|217,244|215,238|210,241|209,247|202,252|188,244|175,250|165,245|146,247|112,256|101,256|98,266|85,277|75,286|68,288|59,298|48,314|38,335|38,345|28,344|30,334|36,318|43,303|54,283|64,269|74,250|83,237|92,221|100,208|112,196|125,181|135,168|144,157|150,151|158,143|170,129|185,113|199,100|210,90|231,70|252,55|274,36|294,24|304,18|315,9|651,11" ],
	mask   : "#00257a",
	animation_info : {
		animation_coords : [
			// section near the sun
			[ "650,244|483,243|480,221|492,178|483,144|533,123|572,97|617,70|652,83" ],
			// next ring
			[ "516,245|531,179|576,124|653,110|654,12|582,12|557,24|535,36|505,44|478,57|432,95|408,118|380,135|361,153|346,164|324,191|315,208|313,244|335,243|350,247|370,242|386,242|406,237|419,231|435,238|444,242|481,245|528,245|599,244|634,244" ],
			// third stripe, touching outer edge of moon
			[ "323,244|348,192|396,143|444,109|489,69|552,39|586,12|469,11|449,24|425,39|398,65|376,86|352,105|330,124|301,149|281,169|260,194|240,217|227,242|227,247" ], 
			// fourth stripe, covering end of moon
			[ "106,253|123,227|145,198|165,176|197,146|235,111|264,76|287,56|328,35|352,16|359,12|468,12|428,41|394,66|372,83|345,113|321,137|294,158|258,198|244,218|231,246|217,246|210,239|205,241|206,248|199,250|190,250|177,245|174,248|164,246|158,241|155,246|143,246|117,256" ],
			// fifth stripe, extending to end of sphere
			[ "375,9|310,9|296,19|280,29|267,40|258,48|240,62|224,76|204,93|189,107|175,120|160,138|145,155|135,165|128,173|118,185|107,199|99,211|88,228|80,240|69,255|62,271|54,286|44,304|36,321|27,344|35,344|45,322|54,310|65,316|71,313|77,309|75,298|75,285|87,275|95,271|99,263|98,256|106,253|123,227|145,198|165,176|197,146|235,111|264,76|287,56|328,35|352,16|359,12" ]
		],
		delay : 300,
	}
}
hotspots.push(sphere_bg);


// foreground bg
foreground_bg = {
	coords : [ 
				"165,245|174,249|187,244|200,250|197,256|192,253|188,256|184,253|177,258|171,258|167,254|155,250|143,248", // 1
				"202,251|208,246|208,242|215,238|217,244|243,252|241,255|232,253|221,253|210,254", // 2
				"242,251|260,243|276,245|334,242|319,250|341,256|353,257|358,260|388,260|388,269|382,269|371,272|357,272|344,272|332,274|312,277|317,278|312,281|306,283|308,278|298,278|286,279|280,279|269,276|263,280|258,277|252,279|248,277|234,277|233,274|227,272|221,270|226,269|240,271|251,270|257,270|264,267|273,267|285,265|298,262|277,262|272,258|264,256|255,258|244,255", // 3
				"403,284|408,285|408,287|413,292|420,292|418,297|414,297|412,299|414,303|406,308|404,297|403,290|404,288", // 4
				"403,284|408,285|408,287|413,292|420,292|418,297|414,297|412,299|414,303|406,308|404,297|403,290|404,288|438,242|523,245|514,250|504,246|497,251|484,253|471,246|466,251|436,252", // 5
				"405,272|417,268|423,261|433,263|441,256|466,258|475,253|478,257|487,257|491,256|500,253|506,255|511,257|544,252|566,254|559,262|536,261|531,260|520,266|507,260|497,265|486,268|490,272|498,277|513,276|523,280|537,281|546,281|550,279|562,283|543,285|551,289|551,293|547,292|536,293|528,290|520,291|515,288|504,289|492,288|492,281|480,276|479,268|474,270|468,270|465,270|463,264|459,262|454,265|448,265|443,263|438,264|434,267|429,268|423,272|415,273", // 6
				"523,242|566,242|601,243|621,243|612,248|597,250|605,256|597,256|587,261|568,253|543,253|535,250|530,250|526,247", // 7
				"616,253|625,251|631,251|634,249|640,250|648,249|651,247|651,254|648,254|639,253|631,254|625,254|621,256", // 8
				"623,260|634,259|648,258|645,260|641,264|635,265|631,266|626,264", // 9
				"611,263|622,267|633,270|636,274|642,275|647,278|650,275|651,282|647,282|645,285|632,284|621,284|611,283|606,283|599,280|610,279|620,277|626,275|625,271|617,269|607,270", // 10
				"464,308|472,308|477,311|487,314|498,314|496,318|502,322|492,321|483,320|475,316|468,314|462,313", // 11
				"503,345|513,340|519,340|520,332|527,332|533,329|536,328|542,331|537,334|533,334|532,338|524,339|528,347", // 12
				"572,345|573,338|585,339|586,345" // 13
			 ],
	mask   : "#b09900"
}
hotspots.push(foreground_bg);

// clouds
clouds = {
	coords : [ 
				"10,344|10,298|17,300|20,296|24,296|27,298|30,294|34,294|36,296|38,291|43,290|51,290|47,296|44,302|41,307|37,316|29,312|22,310|20,308|20,307|24,305|24,304|22,302|18,302|15,303|14,305|14,308|16,312|22,315|27,316|30,318|35,320|31,329|27,338|25,344", // 1
				"12,290|12,259|18,260|17,257|18,254|21,251|24,250|29,248|35,249|40,253|42,252|45,254|50,256|53,257|55,260|58,261|62,262|66,262|62,267|60,272|56,278|54,282|52,285|45,286|39,285|32,285|26,286|21,286|17,287", // 2
				"12,179|12,123|15,120|21,120|26,121|30,125|36,125|37,122|40,120|38,116|41,115|46,109|50,106|56,106|61,108|66,106|73,107|76,109|81,113|87,114|92,117|99,116|101,113|98,108|100,101|105,99|110,97|112,97|114,96|120,96|126,94|133,95|138,98|145,100|147,103|152,104|154,108|158,105|157,98|160,94|162,91|170,88|176,86|185,86|189,84|198,84|206,83|213,84|213,86|208,90|202,96|195,101|189,106|184,112|179,116|174,121|171,126|166,130|162,134|158,138|154,144|150,148|147,151|146,155|147,152|144,152|135,152|122,154|118,155|108,156|101,158|90,160|82,161|76,162|68,165|59,166|53,169|45,170|39,172|30,173|25,174|18,176", // 3
				"13,81|13,76|16,74|20,74|21,72|23,70|25,67|30,65|34,64|37,66|44,67|48,67|49,65|49,61|51,60|54,58|61,60|64,62|69,60|76,58|81,58|87,58|91,57|96,53|104,52|110,55|113,53|119,50|122,54|120,57|118,61|115,64|102,66|88,68|76,69|69,71|64,73|56,73|50,77|46,77|38,77|32,79|23,80|18,81", // 4
				"210,43|214,40|217,38|217,34|225,34|229,35|230,37|234,35|240,37|244,34|251,36|251,32|257,27|260,30|264,28|268,31|274,28|279,30|275,34|269,37|265,40|264,46|249,46|240,46|233,48|225,49|217,45", // 5
				"272,15|277,12|279,9|298,9|296,12|293,14|289,15|286,15|284,16|280,17", // 6
				"76,42|78,37|80,32|78,25|77,20|74,14|70,9|186,9|190,13|194,18|189,19|190,23|184,26|173,26|161,28|152,30|145,31|139,32|133,33|128,32|124,30|116,30|113,30|109,33|109,36|101,38|93,40|84,41" // 7
			 ],
	mask   : "#d1d1d1"
}
hotspots.push(clouds);

// left stripes in sky, between the cloud layers
left_sky = {
	coords : [ 
				"11,298|17,299|21,297|25,298|30,295|36,295|37,292|42,289|49,290|53,285|48,285|44,286|40,285|33,284|28,285|20,286|17,287|13,290", // 1
				"11,258|12,179|20,176|30,174|40,171|45,169|57,168|70,165|80,162|93,160|101,158|113,155|122,153|132,152|141,151|146,152|140,160|136,165|131,170|126,176|121,182|116,188|109,196|106,201|102,205|98,212|94,206|93,202|91,200|86,197|86,199|82,197|78,197|71,197|72,198|72,201|69,202|70,205|73,207|74,209|74,212|68,212|65,213|70,217|76,220|80,221|83,224|88,226|84,232|78,228|70,225|66,224|59,225|54,228|49,230|48,232|45,237|47,243|50,246|49,250|48,252|49,256|46,253|42,253|38,252|35,250|30,249|25,250|21,253|17,256|18,261|14,258", // 2
				"12,121|12,94|24,92|43,89|65,85|91,81|117,77|140,74|159,70|184,68|204,64|221,61|237,58|245,58|238,64|231,70|224,76|220,81|216,84|214,86|210,85|206,84|200,87|193,84|189,85|187,87|179,87|173,87|167,89|161,93|157,97|160,102|158,104|159,107|156,104|152,104|147,102|146,100|141,100|139,97|132,95|126,95|121,95|118,97|114,96|111,97|102,99|98,103|98,108|100,112|100,116|93,119|89,116|84,114|78,110|72,108|64,107|61,106|56,106|48,108|45,111|41,114|39,116|39,118|36,124|30,124|29,122|22,119|17,120" // 3
			 ],
	mask   : "#707070"
}
hotspots.push(left_sky);


// ground/dirt area (brown color) around bottom right
ground = {
	coords : [ 
			 	"35,344|36,330|40,325|45,329|51,329|55,332|61,332|70,332|79,336|87,339|96,341|106,344|74,344|71,339|68,336|58,334|54,336|46,340|48,344", // bottom left - 1
				"79,329|108,340|108,336|110,328|96,330|84,328", // underneath the arm - 2
				"183,345|211,345|211,344|212,340|205,340|196,336|193,336|191,339|188,340|187,342", // underneath the left foot - 3
				"176,258|180,256|184,253|187,256|192,255|196,256|200,253|203,253|207,254|212,254|215,254|220,253|223,254|230,254|236,254|245,256|254,258|262,256|276,260|271,261|266,261|257,261|250,262|244,260|239,260|232,260|222,260|214,258|208,259|202,260|191,260|184,260", // top left dirt line - 4
				"185,261|192,261|196,262|205,262|209,262|217,261|221,261|226,261|229,263|238,264|243,264|246,264|250,264|257,264|260,265|266,265|270,265|269,267|264,267|258,269|252,270|244,271|241,271|232,270|226,270|220,269|219,271|224,273|227,274|227,281|228,283|232,284|242,286|250,286|255,287|264,287|272,289|280,289|285,290|292,290|296,292|301,294|312,294|307,296|303,297|300,298|294,298|286,297|277,297|266,296|260,296|258,296|252,295|249,294|244,294|239,293|234,293|230,290|226,287|222,284|217,280|214,277|210,274|206,270|203,268|200,266|192,264|186,263|184,262", // above sheppard right leg, extending to heel - 5
				"318,295|328,295|336,296|342,297|351,297|354,298|354,301|353,304|354,308|351,308|347,312|344,312|339,309|336,308|332,306|326,304|324,302|320,299|318,296", // triangle above right foot - 6
				"229,345|230,341|229,337|228,337|233,335|240,333|247,333|254,330|260,328|266,326|270,323|274,320|280,316|284,313|290,310|299,310|306,310|314,312|321,315|325,318|330,320|338,319|342,319|347,320|352,322|361,324|368,325|373,326|380,328|389,330|396,334|407,334|417,334|422,336|429,338|436,338|440,341|443,343|444,345|409,345|401,341|393,338|382,337|373,335|369,336|365,338|360,338|353,338|345,337|339,337|330,337|321,337|322,333|320,330|314,331|312,333|308,333|300,332|294,330|289,333|286,334|285,337|282,339|270,339|264,339|262,338|256,340|256,341|258,344", // large patch below right leg and extending to below tree - 7
				"310,277|318,275|328,275|337,273|349,272|361,272|374,271|384,270|389,271|390,274|389,275|387,278|380,278|377,278|372,278|368,278|363,277|359,277|354,278|350,280|344,280|337,280|331,280|328,280|323,280", // patch to left of tree, middle of trunk - 8
				"338,255|345,252|352,252|358,252|367,252|376,252|381,253|387,254|389,256|387,257|389,258|390,260|384,260|380,260|374,260|367,260|360,260|355,258|350,257|345,256", // top left of tree - 9
				"435,296|439,302|447,303|456,302|458,298|458,296|454,296|448,296|442,295", // right of tree below lake - 10
				"472,296|474,302|478,302|486,297|478,297", // right of tree below lake - 11
				"496,296|505,296|503,298|499,302|496,297", // right of tree below lake - 12
				"524,297|528,296|534,295|541,293|548,292|552,293|552,290|559,289|566,289|571,289|581,290|579,292|580,297|578,297|574,296|572,297|570,298|569,300|566,301|565,302|566,304|562,304|555,304|552,304|551,300|548,298|544,298|540,297|537,301|534,303|532,305|529,308|529,305|529,302|526,300", // immediate left of 'castle' - 13
				"607,296|609,292|614,293|620,294|631,294|638,294|640,297|640,299|637,302|633,301|630,301|630,304|628,301|626,299|624,298|622,297|620,298|618,300|613,302|609,300|609,299", // right of 'castle' - 14
				"484,270|491,270|497,270|505,270|510,270|516,269|526,269|533,269|542,269|553,268|565,264|576,262|583,262|590,262|600,264|609,264|608,269|606,273|601,275|599,272|598,270|596,270|592,272|589,272|585,271|583,269|577,269|576,270|572,271|568,271|565,272|562,274|560,270|554,269|552,271|549,274|543,274|532,276|521,276|513,277|504,277|501,277|497,276|491,274", // top right mound section - 15
				"54,310|60,305|67,300|78,294|78,302|74,304|77,311|72,316|63,315|54,316|47,318" // inside sheppard's left arm
			 ],
	mask   : "#755200" 
}
hotspots.push(ground);


// tree (complete, including leaves for now)
tree = {
	coords : [ "377,319|386,309|386,288|389,268|385,240|364,234|345,237|345,231|327,228|330,216|315,206|320,199|331,194|340,191|345,195|345,192|349,189|338,181|349,173|349,164|358,157|362,158|379,152|393,144|405,138|418,148|424,150|439,158|444,164|445,166|449,176|455,180|455,191|448,194|445,197|445,204|450,209|443,216|426,218|417,221|409,230|404,237|414,232|425,234|439,242|437,253|441,256|433,262|423,262|417,268|405,272|403,292|407,312|410,317|409,323|398,318|391,321|379,321" ],
	mask   : "#005e03",
	animation_info : {
		animation_coords : [
			// first the trunk
			[ "378,318|387,311|388,297|388,281|384,279|388,272|388,264|386,257|388,248|387,241|384,237|378,237|370,230|366,224|362,218|359,216|361,214|355,208|355,204|360,204|361,208|364,211|368,204|371,207|369,211|369,213|372,222|377,228|388,232|387,222|388,214|386,208|380,204|375,197|368,188|376,188|381,194|387,200|392,200|394,193|396,186|402,183|406,176|416,179|412,180|407,186|402,195|400,202|397,207|399,224|407,216|409,200|410,191|414,188|420,185|426,180|431,184|427,188|422,192|418,195|416,201|415,208|416,213|422,207|425,207|427,211|421,216|415,220|411,225|407,229|403,234|401,237|396,241|396,247|400,254|402,257|401,261|404,265|410,260|416,259|423,257|422,262|415,264|408,268|403,271|402,284|404,300|407,312|408,313|411,320|404,320|397,320|392,322|385,321" ],
			// then the leaves
			[	
				// main leaves section
				"388,241|371,238|354,236|345,231|332,231|326,226|331,219|331,216|321,214|315,207|319,198|332,195|336,191|343,195|347,189|338,184|346,174|354,169|352,161|357,158|364,160|372,156|380,152|389,148|394,144|406,140|410,141|418,149|426,149|435,156|442,161|448,168|443,169|453,177|455,184|455,190|448,198|445,203|450,209|445,215|430,218|421,219|413,223|407,234|402,237|391,239",
				// bottom right bunch
				"408,263|402,259|401,256|400,251|397,246|400,241|408,236|414,230|419,231|421,234|430,236|438,241|441,246|437,252|441,256|441,259|432,263|423,263|412,263"
			]
		],
		delay : 600
	}
}
hotspots.push(tree);

// sun (not including aura)
sun = {
	// 'coords' represents the hotspot location, 
	coords : [ "484,221|508,209|539,199|567,191|568,181|550,176|533,168|518,159|501,151|484,142|496,141|523,149|545,158|575,166|591,155|583,136|565,95|585,112|595,130|607,151|623,151|635,151|651,131|650,241|635,223|620,223|610,222|604,231|598,235|594,242|579,242|581,228|583,220|587,215|577,209|541,215|508,221|486,225" ],
	mask   : "#ffee05",
	animation_info : {
		animation_coords : [
			[ "590,186|592,180|595,176|605,170|604,170|609,168|617,168|621,168|627,168|633,170|638,172|640,174|644,177|646,181|647,184|647,186|644,196|635,201|620,206|608,204|600,202|594,197|593,192"],
			[ "650,173|646,169|637,165|627,163|620,162|605,162|596,167|589,173|584,179|581,188|584,199|593,203|603,208|612,209|625,210|634,208|643,205|647,199|651,197|650,206|646,211|635,216|618,217|607,216|596,213|583,206|576,198|574,188|577,178|580,173|587,165|593,160|603,157|615,156|628,156|638,158|645,161|650,165"],
			[ "484,221|508,209|539,199|567,191|568,181|550,176|533,168|518,159|501,151|484,142|496,141|523,149|545,158|575,166|591,155|583,136|565,95|585,112|595,130|607,151|623,151|635,151|651,131|650,241|635,223|620,223|610,222|604,231|598,235|594,242|579,242|581,228|583,220|587,215|577,209|541,215|508,221|486,225"]
			],
		delay : 400
	}
}
hotspots.push(sun);

// moon
moon = {
	coords : [ "399,21|392,26|393,33|403,43|409,48|419,50|430,51|439,52|445,52|457,50|463,48|470,46|476,41|484,38|488,32|494,26|499,19|501,11|464,10|462,12|462,15|457,15|447,18|446,22|441,25|437,28|429,31|411,31|406,26" ],
	mask   : "#7a7600",
	animation_info : {
		animation_coords : [
			// moon face
			[ "431,32|437,29|441,29|444,24|447,23|444,20|449,18|452,17|456,17|461,17|460,12|472,12|475,12|475,15|470,21|465,26|459,28|455,31|449,33|444,34|438,34|434,36|432,35"],
			// middle moon
			[ "475,15|470,21|465,26|459,28|455,31|449,33|444,34|438,34|434,36|432,35|426,34|419,31|409,31|475,15|470,21|465,26|459,28|455,31|449,33|444,34|438,34|434,36|432,35|426,34|419,31|409,31|414,36|423,38|432,41|436,41|442,41|449,40|455,39|459,38|463,35|467,34|470,32|473,30|477,27|479,24|480,21|483,17|483,12|480,11|474,11"],
			// outermost section of moon
			[ "475,15|470,21|465,26|459,28|455,31|449,33|444,34|438,34|434,36|432,35|426,34|419,31|409,31|414,36|423,38|432,41|436,41|442,41|449,40|455,39|459,38|463,35|467,34|470,32|473,30|477,27|479,24|480,21|483,17|483,12|492,11|501,11|501,19|496,24|492,31|488,35|481,40|473,44|469,47|461,50|452,53|439,53|430,53|418,50|406,46|398,42|397,36|393,34|392,29|394,26|398,24|402,28|409,32|412,35"]
			],
		delay : 400
	}
}
hotspots.push(moon);

// sheppard
sheppard = {
	coords : [ 
			 	"35,319|28,317|23,315|18,312|13,308|13,304|17,302|24,302|24,304|22,306|24,309|29,311|35,314|37,315", // left-hand cane section 
				"68,261|60,261|58,262|55,258|51,254|50,250|52,246|46,243|46,232|54,230|64,224|74,227|82,231|85,231|81,238|74,248|70,254", // head
				"88,226|83,224|76,220|68,214|68,211|72,212|76,210|68,203|70,201|72,198|76,195|82,197|87,198|94,202|94,208|98,212|93,220", // right hand
				"46,324|47,319|54,317|65,316|70,317|71,314|78,314|78,310|76,304|78,298|80,292|78,285|80,279|88,278|94,271|100,268|102,262|100,258|101,258|108,260|116,258|120,257|127,256|130,254|134,254|136,253|139,251|141,249|149,250|155,251|160,253|166,254|175,260|182,262|194,265|202,269|214,277|221,283|226,287|232,291|239,293|245,293|249,296|257,296|274,296|288,298|302,299|308,296|314,294|321,300|330,305|338,309|340,311|341,315|340,318|334,318|324,316|314,312|306,311|291,312|282,316|274,322|263,327|254,332|244,332|229,335|228,338|230,344|228,344|216,345|213,345|210,342|203,338|194,336|190,340|187,343|184,346|110,344|108,338|111,326|95,327|84,328|71,328|58,331|50,330", // main body
				"76,330|110,339|110,345|68,333" // middle can snippet
			 ],
	mask   : "#f1d17e",
	animation_info : {
		animation_coords : [
			// robe fades in first
			[ "69,316|77,313|81,310|76,303|78,296|75,289|78,280|88,277|96,272|103,262|100,257|104,256|108,258|115,258|124,256|133,255|136,251|140,248|157,252|169,255|176,260|186,264|197,267|203,270|213,277|223,284|228,288|237,292|253,295|266,296|279,296|290,299|285,307|280,312|269,320|265,326|252,329|235,333|225,336|209,319|197,322|194,327|193,336|181,344|112,344|110,333|110,327|98,328" ], 
			// then the hands, feet, head
			[ 
				"54,315|42,324|50,329|62,331|80,329|97,329|104,324|88,320|75,315", // left hand
				"68,261|56,261|52,252|52,245|48,243|46,232|63,225|83,228|80,240|69,256", // head
				"91,228|84,220|72,219|66,216|72,208|68,201|74,196|87,196|96,205|97,211|94,219", // right hand
				"293,298|301,296|313,292|324,300|340,307|344,316|336,319|324,318|312,315|296,312|273,321|280,312|285,304", // right foot
				"192,335|196,323|208,320|215,321|223,329|230,336|229,344|215,345|212,340|201,336" // left foot
			], 
			// then the cane
			[
				"35,319|28,317|23,315|18,312|13,308|13,304|17,302|24,302|24,304|22,306|24,309|29,311|35,314|37,315", // top part of cane
				"76,330|110,339|110,345|68,333" // middle can snippet
			]
		], // close animation_coords
		delay : 500
	}
}
hotspots.push(sheppard);

// rising sun at left top
rising_sun_left = {
	coords : [ 
			 	"94,76|101,69|107,68|111,71|117,64|124,55|116,50|115,44|112,38|116,31|124,33|132,36|143,43|153,39|167,35|180,35|186,35|194,22|203,19|212,23|212,30|206,36|214,43|226,51|231,58|216,62|197,63|183,67|166,70|145,73|127,77|120,77|103,78|96,76", 
				"189,8|199,18|213,21|240,25|256,23|261,22|268,19|273,14|277,10"
			 ],
	mask   : "#ff9830",
	animation_info : {
		animation_coords : [
			[ "151,72|200,64|194,62|183,61|173,60|161,62|155,66" ], // first the innermost ring on bottom circle
			// then the second ring section, including inner seciton of top circle
			[ 
				"147,72|155,64|165,61|179,59|193,62|196,64|215,62|208,56|194,51|179,50|164,50|151,54|139,60|135,66|132,73|150,70", // middle section of bottom circle
				"208,9|263,10|253,16|243,17|228,18|216,16|208,14" // inner section of top circle
			],
			// and then the final section 
			[
				// outermost section of bottom circle
				"125,76|133,64|148,52|162,52|185,48|202,54|209,57|215,62|232,58|224,50|212,43|207,42|212,32|212,23|202,19|192,20|190,26|187,35|177,35|167,36|154,38|148,40|143,43|135,35|127,34|117,31|111,36|117,42|120,46|121,54|118,61|115,67|100,68|96,74|103,77|116,76",
				"189,10|201,18|215,24|230,25|246,25|261,22|272,17|279,9|263,9|250,14|232,15|216,12|215,10" // outer section of top circle
			]
		], // close animation_coords
		delay : 500
	}
}
hotspots.push(rising_sun_left);

// cart
cart = {
	coords : [ "12,9|12,75|23,75|20,68|27,64|35,64|46,67|52,59|60,59|72,51|77,44|78,31|78,22|74,13|73,9" ],
	mask   : "#6f78fc", 
	animation_info : {
		animation_coords : [
			// first the solid part
			[ 
				"24,8|30,19|31,33|30,47|29,57|26,64|23,71|31,68|41,66|47,48|48,32|48,20|45,9", // left hand side solid part 
				"56,9|61,20|64,31|60,44|48,57|62,59|68,53|76,42|78,28|76,18|71,9" // right hand side solid part
			], 
			// then the spokes
			[ 
				"12,67|13,8|25,10|29,24|32,40|31,55|26,66|21,71", // left hand spokes section
				"45,10|48,20|48,34|47,52|45,59|53,53|61,40|61,26|59,15|58,9" // right-most spokes
			]
		], // close animation_coords
		delay : 600
	}
}
hotspots.push(cart);


// shrubs at bottom left and bottom right
shrubs = {
	coords : [ 
			 	"48,345|46,343|45,340|49,337|52,336|56,334|59,334|64,335|69,337|71,340|73,342|73,345", // bottom left - 1
				"438,346|434,336|442,329|454,334|458,333|457,326|461,314|462,320|467,328|471,332|476,332|480,325|491,324|493,327|503,329|496,330|493,333|496,333|492,337|498,337|501,340|511,339|511,342|503,345", // middle left - 2
				"529,346|526,343|524,338|532,338|533,334|536,334|542,332|545,330|549,328|554,327|561,327|563,330|560,333|564,338|569,338|572,338|573,341|571,345", // middle center bottom - 3
				"554,329|557,321|564,316|569,312|578,311|592,310|598,310|604,310|606,315|609,320|612,323|613,326|612,330|610,332|608,335|603,337|599,339|593,339|588,339|582,340|577,339|570,338|566,336|562,332|561,330", // upper middle - 4
				"586,346|586,340|593,339|598,338|605,338|613,336|616,334|617,329|621,326|624,326|626,329|629,325|634,325|640,325|644,328|648,330|650,334|651,345", // right - 5
				"256,342|261,338|276,340|284,340|288,334|311,333|317,330|323,331|325,338|333,336|345,339|360,340|372,335|383,335|393,338|400,340|406,345|309,345|260,345" // bottom middle thin row - 6
			 ],
	mask   : "#ff3c00" 
}
hotspots.push(shrubs);


// lakes
lakes = {
	coords : [ 
			 	"404,292|413,292|422,292|427,290|434,289|444,289|454,289|462,289|476,290|486,289|498,289|505,290|511,289|514,288|518,289|522,291|526,289|531,291|536,294|533,294|528,296|524,297|521,296|518,296|516,293|512,293|509,293|505,296|501,296|498,296|495,295|493,294|489,294|486,295|481,296|475,297|471,296|470,294|465,293|461,294|458,294|458,297|455,297|450,296|447,296|441,296|437,296|435,296|434,294|432,293|428,293|424,294", // left section - 1
				"510,277|521,276|530,276|537,276|543,276|549,276|556,276|565,276|565,276|574,277|580,277|588,276|596,276|603,276|606,272|609,270|618,270|625,271|625,276|618,278|609,280|596,282|604,282|611,284|620,284|628,285|637,285|645,285|648,284|650,282|650,290|647,293|640,296|638,294|631,294|624,294|614,294|611,292|608,289|604,286|601,288|597,293|593,288|590,288|590,284|589,281|585,281|585,286|583,288|580,289|574,289|568,289|565,289|559,289|556,291|550,289|545,287|540,287|545,285|550,285|557,285|561,285|563,283|559,281|554,281|554,280|549,279|546,281|541,281|532,280|526,280" // right - 2
			 ],
	mask   : "#171fff" 
}
hotspots.push(lakes);


// buildings
buildings = {
	coords : [ 
			 	"426,277|434,272|442,277|445,278|452,277|461,278|464,282|472,284|472,282|475,282|479,275|482,278|492,280|492,285|493,288|489,289|485,290|481,289|463,289|458,289|444,289|437,290|435,289|433,287|432,285|429,282", // left section - 1
				"581,289|584,285|586,278|589,285|594,289|597,292|602,285|607,290|609,292|612,302|606,300|601,300|596,300|593,302|589,303|586,301|585,300|581,301|579,291" // right - 2
			 ],
	mask   : "#f8ff29" 
}
hotspots.push(buildings);


// bushes
bushes = {
	coords : [ 
			 	"226,272|233,274|235,278|238,277|248,277|252,280|257,278|262,281|269,277|277,279|286,280|298,278|309,278|306,282|297,284|286,284|276,285|267,284|258,284|251,284|244,284|235,284|228,284|226,279|227,277", // left upper thin row - 1
				"306,290|312,288|316,284|321,286|323,286|328,284|330,284|334,284|337,285|340,288|346,284|353,282|360,282|367,284|369,286|377,284|378,282|385,282|388,284|388,290|384,291|377,290|371,290|365,292|361,292|356,291|353,292|349,292|344,292|336,292|326,292|320,292|312,291", // top bushes touching tree on left side - 2
				"352,310|350,302|356,297|361,295|366,292|370,293|376,294|379,299|384,304|387,306|387,308|385,309|378,310|369,310|369,313|364,312|358,310|354,310|350,309|352,305", // single bush bottom left of tree - 3
				"408,288|412,284|416,283|414,279|421,278|428,278|429,283|435,286|432,290|426,292|418,292|413,292", // single bush top right of tree trunk - 4
				"407,309|413,304|412,300|416,298|419,298|422,294|429,292|433,294|436,301|442,302|446,308|447,310|446,313|446,315|441,315|428,314|416,314|406,313", // single bush bottom right of tree trunk - 5
				"456,298|460,297|461,294|467,294|476,296|485,296|492,294|498,297|504,296|511,292|518,296|522,296|531,303|524,303|514,303|493,302|478,303|465,303", // three small bushes in a line on right side - 6
				"497,318|501,312|505,310|510,311|514,309|525,306|530,303|537,297|545,298|552,301|553,306|556,312|559,317|554,319|550,322|542,324|529,324|521,324|514,324|508,324|504,324|501,321|498,320", // large bush below right of above group - 7
				"563,305|566,300|571,297|578,300|580,301|585,300|588,304|594,300|599,300|606,300|610,302|613,300|619,298|620,297|625,298|628,301|632,301|633,302|639,298|643,294|648,292|650,292|650,321|642,321|633,323|628,321|622,317|622,314|625,313|625,308|616,308|605,309|592,308|582,308|571,307|565,305", // bottom right bunch - 8
				"545,275|550,271|553,269|558,269|562,270|571,270|577,269|585,269|592,269|598,269|601,274|597,276|592,276|585,276|575,277|569,277|560,277|550,277" // small row above lake - 9
			 ],
	mask   : "#059400" 
}
hotspots.push(bushes);


// grass
grass = {
	coords : [ 
			 	"177,258|186,259|195,259|203,258|212,258|221,258|232,260|241,259|252,261|267,261|276,262|289,262|300,262|291,264|280,265|272,267|265,267|259,265|252,264|242,264|234,264|227,262|222,261|217,261|212,262|204,262|199,262|194,261|190,261", // upper left thin horizontal stripe - 1
				"243,285|249,284|257,285|265,284|275,284|284,284|292,283|300,284|306,284|313,281|317,280|326,281|335,280|342,280|351,279|360,276|369,276|374,278|385,278|386,280|386,283|383,281|380,281|374,285|372,287|368,282|361,282|355,282|350,283|345,285|341,287|337,284|333,284|328,284|324,285|323,286|322,286|318,286|314,286|312,288|307,289|301,289|293,289|286,289|279,289|273,288|267,287|261,287|255,286", // left of tree top middle - 2 
				"287,290|298,290|308,291|313,290|323,291|337,292|345,292|354,291|361,291|366,290|380,290|386,292|387,300|381,300|377,296|373,294|370,293|365,294|364,296|358,296|354,297|348,297|339,296|332,296|325,296|320,294|314,294|310,293|304,293", // left side thin stripe - 3 
				"350,311|360,310|366,312|374,312|385,311|380,315|378,318|380,320|384,317|388,316|388,318|385,321|385,324|386,324|390,320|392,320|397,321|399,322|402,322|402,319|407,321|410,323|413,323|413,320|410,318|408,314|416,314|420,313|430,314|436,314|441,315|444,315|449,313|452,316|454,318|456,322|456,326|457,329|458,335|452,333|446,330|442,329|441,332|442,334|440,336|432,337|425,335|413,335|403,334|396,333|386,330|381,328|376,326|368,325|361,323|352,320|346,317|342,313", // middle under tree - 4
				"461,314|467,314|475,313|480,315|481,319|486,320|494,322|501,324|512,322|522,324|533,325|539,325|546,324|550,324|554,326|553,329|549,330|548,327|546,329|542,329|541,330|535,328|536,330|533,329|528,332|523,332|519,333|521,338|518,341|514,341|510,340|510,338|502,337|498,337|488,336|495,334|497,333|502,330|500,327|496,327|492,328|485,325|481,326|478,332|474,333|469,329|464,323|462,321", // mid-right bottom - 5
				"441,302|453,303|460,303|472,303|485,302|506,302|520,305|530,303|529,307|522,307|515,307|514,314|512,313|510,310|503,310|497,314|492,314|486,314|480,313|473,312|471,308|463,308|463,312|458,315|449,313|449,309|445,306|443,305|441,303", // mid-right above #5 - 6
				"554,305|566,306|578,307|579,310|572,311|567,313|560,319|558,313|555,309", // right-side triangle-ish path above bush - 7
				"597,308|611,309|626,308|626,312|624,313|624,316|630,322|649,322|652,345|648,345|646,334|645,329|639,325|632,326|628,328|622,328|617,329|613,325|611,320|607,315|605,313", // far bottom-right - 8
				"318,249|329,247|336,244|348,248|356,245|368,245|373,246|382,245|388,246|389,254|380,253|372,252|365,251|358,253|350,253|341,255|337,255|331,253|327,253|319,252", // top left above tree - 9
				"402,274|413,273|421,272|425,268|433,267|440,263|445,265|451,265|457,261|462,262|463,269|469,270|480,268|479,274|477,280|472,284|464,284|458,282|452,281|448,278|442,278|439,276|434,273|428,277|421,277|416,278|415,282|410,284|409,286|406,284|402,284", // right of tree trunk - 10
				"436,252|450,252|462,252|465,252|474,248|486,252|499,252|504,248|512,251|522,246|528,250|538,252|545,253|537,254|525,254|512,256|503,253|497,255|492,257|485,256|483,258|473,253|469,255|466,258|457,258|446,258|441,257", // thin horizontal strip top mid-right of tree - 11
				"484,268|493,267|506,260|517,265|522,264|529,261|534,260|542,262|549,262|558,262|566,254|571,254|578,257|586,260|594,258|605,256|609,258|613,257|625,264|633,266|642,264|646,260|650,260|650,277|646,278|638,275|634,270|625,268|618,266|613,265|611,262|610,263|610,265|605,264|595,264|588,264|579,264|571,264|561,266|554,266|546,269|540,269|529,270|518,269|512,269|501,270|493,271|486,271", // long horizontal strip going to right side - 12
				"593,252|602,249|613,248|620,245|631,245|641,246|651,245|650,250|642,252|636,250|630,252|624,252|622,253|615,253|615,254|621,256|625,254|634,254|642,254|649,254|650,259|645,259|634,259|626,259|620,261|615,258|610,260|608,259|605,254|596,252" // top right section - 13
			 ],
	mask   : "#fdff78" 
}
hotspots.push(grass);


// all the stars
stars = {
	coords : [ 
			 	"472,121|484,120|492,125|494,115|505,114|505,106|505,100|492,97|477,95|474,103|465,109|470,120",
			    "527,64|535,77|555,79|568,72|569,55|547,49|528,62",
				"627,12|645,22|647,33|632,46|609,41|605,26|612,19",
				"564,30|571,37|584,39|595,29|593,19|575,21",
				"530,12|535,25|554,29|574,16|568,11",
				"508,42|514,52|527,51|533,48|534,37|519,34",
				"493,76|497,86|510,78|507,70|496,70",
				"455,58|462,68|474,68|483,71|493,61|487,50|470,48",
				"422,62|426,71|436,71|442,64|441,56|427,56",
				"402,86|410,100|429,102|444,90|437,79|417,71",
				"382,115|393,127|406,123|418,116|408,106|392,104",
				"366,63|367,74|388,77|405,64|398,54|380,50",
				"366,32|369,37|380,41|387,35|389,30|388,25|377,21",
				"346,19|349,25|358,28|372,19|367,11|354,10",
				"326,9|330,18|338,18|344,14|341,10",
				"342,38|346,45|355,46|359,41|359,35|349,34",
				"336,80|348,82|355,77|351,70|344,70|338,76",
				"298,24|297,32|307,32|314,26|307,22",
				"261,78|265,84|273,86|282,81|278,71|268,71",
				"283,42|287,49|295,49|297,43|297,37|288,37",
				"259,53|266,62|271,61|279,57|275,48|266,47",
				"243,71|248,78|254,76|259,72|257,67|249,63",
				"307,37|305,47|315,50|332,40|329,31|320,27",
				"319,59|320,67|335,69|349,64|347,53|332,49",
				"288,64|288,73|298,72|305,66|297,61",
				"305,75|299,84|303,89|314,91|322,84|319,75",
				"238,94|239,102|248,105|260,95|258,84|244,84",
				"271,98|277,102|286,105|295,99|286,89",
				"211,95|217,104|227,100|225,90|217,90",
				"237,94|239,104|250,106|263,96|257,87|245,84",
				"192,123|195,128|211,129|217,117|213,111|199,110",
				"314,104|321,115|341,119|357,102|352,89|328,88",
				"331,138|337,148|353,146|367,138|357,125|341,122",
				"282,121|288,128|302,128|307,118|303,111|293,109",
				"239,136|244,146|259,147|272,135|266,122",
				"271,148|279,162|297,159|313,149|301,137|280,133",
				"290,176|297,188|313,183|322,179|314,165|294,167",
				"271,213|277,218|289,217|295,207|289,203|277,203",
				"245,229|250,233|260,233|264,228|259,221|248,220",
				"241,172|246,178|258,178|268,169|260,161|244,161",
				"230,199|237,207|254,209|263,197|252,187|240,187",
				"205,143|212,151|221,152|231,145|225,134|212,133",
				"206,168|210,178|220,181|225,172|219,166|211,163",
				"168,151|172,157|180,155|186,148|185,141|174,141",
				"174,169|180,178|185,178|192,171|184,160",
				"181,197|190,205|201,204|203,195|200,190|186,186",
				"144,178|147,185|157,186|164,178|151,173",
				"194,225|199,232|211,231|216,220|209,212|199,213",
				"165,227|170,235|178,235|182,226|176,220|166,220",
				"145,202|149,210|165,208|171,197|164,189|154,191",
				"132,229|137,234|147,234|151,228|146,223|138,221",
				"115,213|123,220|131,216|135,209|129,203|122,205",
				"95,237|100,241|109,241|111,233|107,229|99,229",
				"72,267|78,272|85,270|88,263|81,258|75,261"
			 ],
	mask   :"#ffed21"
}
hotspots.push(stars);



/**
 * hot-spot mask color lookup table
 */
mask_table = {
	'#00257a' : sphere_bg,
	'#b09900' : foreground_bg,
	'#d1d1d1' : clouds,
	'#707070' : left_sky,
	'#005e03' : tree,
	'#ffee05' : sun,
	'#7a7600' : moon, 
	'#f1d17e' : sheppard,
	'#ff9830' : rising_sun_left,
	'#bfbfbf' : cart, 
	'#755200' : ground,
	'#ff3c00' : shrubs,
	'#171fff' : lakes,
	'#f8ff29' : buildings, 
	'#059400' : bushes,
	'#fdff78' : grass,
	'#ffed21' : stars
}




/*****************************************************************************************************************************************
 *****************************************************************************************************************************************
 *****************************************************************************************************************************************
 *****************************************************************************************************************************************/
 
 
// delare and initialize global vars 
var current_mask_color = '#fff';
var active_hotspots = [];
var active_stars = [];
var colorize_stars = false;
var counter = 0;
var star_counter = 0;
var timeouts = [];
var color_img = new Image();
color_img.src = "color.jpg";
sky_img = new Image();
sky_img.src = "sky.png";


function clear_hotspots() {

	for (var i = 0; i < timeouts.length; i++) {
		clearTimeout(timeouts[i]);
	}
	timeouts = []; 

/*	// start to fade out, then remove, the hotspots that are no longer active
	for (var i = 0; i < active_hotspots.length; i++) {
		// select each active canvas from array of active hotspots
		// (each active hotspot is on a unique canvas)
		var current_canvas = $('#' + active_hotspots[i])[0]; 
		// fade out the color
		$(current_canvas).show();
		$(current_canvas).fadeOut(600, function() {
			$(this).remove(); // and get rid of the canvas to conserve memory
		});
		// empty the array so we don't try to remove canvases later that have already been deleted
	}
*/	
	// empty the active hotspots array since all active hotspots were faded out in the preceding 'for' loop
	active_hotspots = []; 
	
	$('.tmp_canvas').show();
	
	$('.tmp_canvas').fadeOut(700, function() {
		$(this).remove(); // and get rid of the canvas to conserve memory
	}); 
}

$(document).ready( function() {
	initialize_shadow_canvas();
	
	// clear all hotspots when user moves mouse out of image 
	$('#cloak').mouseout( function() {
		window.setTimeout(function() {
			clear_hotspots();
		}, 2000);
	});

/*	$('#cloake').mousemove(function(e) {
	
	    var pos = find_position(this);
	    var x = e.pageX - pos.x;
	    var y = e.pageY - pos.y;
	    var coord = "x=" + x + ", y=" + y;
		$('#status').html(coord);
		
	}); */

	$('#cloak').mousemove(function(e) {
	
	    var pos = find_position(this);
	    var x = e.pageX - pos.x;
	    var y = e.pageY - pos.y;
	    var coord = "x=" + x + ", y=" + y;
		var shadow_canvas = $('#shadow_canvas')[0];
	    var ctx = shadow_canvas.getContext('2d');
	    var p = ctx.getImageData(x, y, 1, 1).data; 
	    var hex = "#" + ("000000" + rgbToHex(p[0], p[1], p[2])).slice(-6);
		
		// check to see if the mask color on the shadow div is different from the current one
		// if this is the case, it means that a new hot-spot is being hovered over
		// thus, the function will stop the last animation and initiate a new one with the 
		// current hot-spot
		if (hex != current_mask_color) {
		
			clear_hotspots();
			
			// if the mouse is hovering over a hotspot, hex will register a color other than white, and we proceed to 
			// visually activate the hotspot they are over. otherwise nothing needs to be done. 
			if (hex != '#000000') {
			
			/*	if (hex == '#ffed21') { // user has hovered over a star - initialize custom animation funciton
					colorize_stars = true;
					animate_stars();
				} else if (hex == '#7a7600') { // user has hovered of the moon
					colorize_stars = false;
					animate_moon();
				*/	
				
				// check for special sky/sphere bg case. in this case, the background image for the canvas needs
				// to be replaced with the sky-specific one. 
				if (hex === '#00257a') {
					function delay_generation(delay, coords) {
						timeouts.push( setTimeout(function() {
								generate_canvas(coords, sky_img);
						}, delay) );
					}
					
					var hotspot = sphere_bg;
					
					// check to see if there is any special animation info to process, such as multi-phase fade ins
					var delay = 0;
					var increment = hotspot.animation_info.delay;
					for (var j = 0; j < hotspot.animation_info.animation_coords.length; j++) {	
						delay_generation(delay, hotspot.animation_info.animation_coords[j]);
						delay += increment;
					} 
						
				} else { // no special animation required for the rest of the shapes */
					colorize_stars = false; // stop star animation
					
					var hotspot = mask_table[hex]; // determine which hotspot the color mask refers to
					
					// make sure the hotspot was properly determined from the mask table, so it doesn't throw a million errors
					if (hotspot) {
						change_state(hotspot);
					}
				}
			} // close 'if (hex != '#000000')' 
			
			current_mask_color = hex;
		} // close 'if (hex != current_mask_color)'
	});		
});

function find_position(obj) {
    var curleft = 0, curtop = 0;
    if (obj.offsetParent) {
        do {
            curleft += obj.offsetLeft;
            curtop += obj.offsetTop;
        } while (obj = obj.offsetParent);
        return { x: curleft, y: curtop };
    }
    return undefined;
}

function rgbToHex(r, g, b) {
    if (r > 255 || g > 255 || b > 255)
        throw "Invalid color component";
    return ((r << 16) | (g << 8) | b).toString(16);
}


/**
 * function animate_stars()
 * 
 * params : none
 * return : none
 */ 
function animate_stars() {

	alert('in animate_stars');

/*	var star_coords = [];
	
	// copy star coordinates into seperate array for use keeping track of which ones have been faded in
	for (var i = 0; i < stars.coords.length; i++) {
		star_coords.push(stars.coords[i]);
	}
	
	interval = window.setInterval( function() {
		// select random star
		var star = Math.floor( (Math.random() * coords.length) );
		colorize_star(star_coords[star]);
		star_coords.splice(star, 1); // remove the star we just activated from the array
	}, 1000);
	
	

	if (colorize_stars === true) {
		interval = window.setInterval( function() {
			if (colorize_stars === false) {
				window.clearInterval(interval);
			} else { colorize_star(); }
		}, 3000);
	} 
	
	// colorizes a random star
	function colorize_star() {
	
		// there are 54 stars, so we need to generate a random number between 0 and 53. 
		var star = Math.floor( (Math.random() * 53) );
	
		// create unique id using increasing counter variable so we can referecne the canvas later
		var star_id = 'star' + star_counter; 
		star_counter++;
		
		// add to active_hotspots array to keep track of what is currently colorized
		active_stars.push(star_id);

		// create canvas for star and add it to the image
		$('<canvas>').attr({
			id     : star_id,
		    class  : 'tmp_canvas',
			width  : '668',
			height : '357'
		}).appendTo('#image');	
		
		// fade in the canvas
		var canvas = $('#' + star_id)[0];
		$(canvas).hide();
		$(canvas).fadeIn(500);
		
		if (canvas.getContext) {
			var ctx = canvas.getContext('2d');
			
			ctx.strokeStyle = "rgba(1, 1, 1, 0)";

			// draw the path of one of the stars
			// because be defined 'star' to be a random number between 0 and 53, stars.coords[star] will randomly select
			// the coordiates of one of the 54 stars
			draw_path(stars.coords[star], ctx);
			
			// insert background image inside path
			ctx.save(); 
			ctx.clip();
			ctx.drawImage(color_img,0,0,668,357); // draw image inside path
			ctx.restore(); //restore path
			
			/* makes the star fade out after 3 seconds, producing a twinkle effect. not used for now
			window.setTimeout( function() {
				var star_canvas = $('#' + star_id); 
				// fade out the color
				$(star_canvas).show();
				$(star_canvas).fadeOut(500, function() {
					$(this).remove(); 
				}); 
			}, 3000); */
/*				
		} else {
			alert('your browser does not support canvas');
		} // end if (canvas.getContext) 
	} // end of colorize_star() */
	
} // end animate_stars() 





/**
 * function animate_moon()
 * 
 * params : none
 * return : none
 */
function animate_moon(hotspot) {
	alert('we are animating moon');
}


/**
 * function initialize_shadow_canvas()
 * params - none
 * adds hotspot masks to the shadow canvas
 */
function initialize_shadow_canvas() {	
		
	var shadow_canvas = $('#shadow_canvas')[0];
	if (shadow_canvas.getContext) {
		var ctx = shadow_canvas.getContext('2d');
		
		// create the paths!
		for (var i = 0; i < hotspots.length; i++) {
			
			// define the color with which to mask the hot-spot
			ctx.fillStyle = hotspots[i].mask;
			
			// pass coords to function to draw the actual path
			for (var j = 0; j < hotspots[i].coords.length; j++) {
				draw_path(hotspots[i].coords[j], ctx); 
				ctx.fill() 
			}
		}
		
	} else {
		alert('your browser does not support canvas');
	}
} // end of initialize_shadow_canvas()







/**
 * function draw_path()
 * parameters: - coords - a string of the coordinates in the path, each coordinat should be 
 *                      comma-separated; each coordinate pair is delimited by |
 *                      ex: "377,319|386,309|386,288|389,268|385,240|364,234|345,237|345"
 *             - ctx - the 2d canvas context to draw on
 * This function draws a path using lineTo() to go between coordinates. It does not fill or
 * stroke the path; that must be done by the calling function, depending on the desired behavior
 */
function draw_path (new_coords, ctx) {

	// extract coordinate data from string into array
	coords = new_coords.split('|'); // split separate coordinate pairs
	for (var j = 0; j < coords.length; j++) { //split x and y coords in each coordinate pair
		coords[j] = coords[j].split(',');
	}
	
	ctx.beginPath(); // start the path! 
	
	// the first coordinate uses moveTo() instead of lineTo(), so shift it off and use it
	var first_coord = coords.shift();
	ctx.moveTo(first_coord[0], first_coord[1]);
	
	// now the rest!
	for (var j = 0; j < coords.length; j++) {
		ctx.lineTo(coords[j][0], coords[j][1]);
	}

	ctx.closePath();
}


function change_state(hotspot) {

	function delay_generation(delay, coords, img) {
		timeouts.push( setTimeout(function() {
			if (img !== undefined) {
				generate_canvas(coords, img);
			} else {
				generate_canvas(coords);
			}
		}, delay) );
	}
	
	// check to see if there is any special animation info to process, such as multi-phase fade ins
	if (hotspot.animation_info) {
		var delay = 0;
		var increment = hotspot.animation_info.delay;
		if (hotspot.animation_info.img) {
			var img = hotspot.animation_info.img;
			for (var j = 0; j < hotspot.animation_info.animation_coords.length; j++) {	
				delay_generation(delay, hotspot.animation_info.animation_coords[j], img);
				delay += increment;
			} 
		} else {
			for (var j = 0; j < hotspot.animation_info.animation_coords.length; j++) {	
				delay_generation(delay, hotspot.animation_info.animation_coords[j]);
				delay += increment;
			} 
		}

	} else {
		// in this case, it is a simple single zone fade in, so we proceed to draw it, which only takes
		// one call to generate_canvas
		generate_canvas( hotspot.coords );
	}
}


function generate_canvas (hotspot_coords, img) {

	if (img === undefined) {
		img = color_img;
	}
	
	// create unique id using increasing counter variable so we can referecne the canvas later
	var canvas_id = 'canvas' + counter; 
	counter++;
	
	// add to active_hotspots array to keep track of what is currently colorized
	active_hotspots.push(canvas_id);

	$('<canvas>').attr({
		id     : canvas_id,
	    class  : 'tmp_canvas',
		width  : '668',
		height : '357'
	}).appendTo('#image');	
	
	// fade in the canvas
	var canvas = $('#' + canvas_id)[0];
	$(canvas).hide();
	$(canvas).fadeIn(900);
	
	if (canvas.getContext) {
		var ctx = canvas.getContext('2d');
		
		// set strokeStyle to be transparent so there will not be a visible border
		ctx.strokeStyle = "rgba(1, 1, 1, 0)";

		for (var i = 0; i < hotspot_coords.length; i++) {

			// draw the path using the hostpot coordinates
			draw_path(hotspot_coords[i], ctx);
			
			// insert background image inside path
			ctx.save(); 
			ctx.clip();
			ctx.drawImage(img,0,0,668,357); // draw image inside path
			ctx.restore(); //restore path
		}
			
	} else {
		alert('your browser does not support canvas');
	} // end if (convas.getContext) 
	
} // end draw_canvas()